{"version":3,"sources":["App.js","reportWebVitals.js","index.js","data/employees.js"],"names":["EmployeeRow","employee","onEmployeeDelete","id","name","role","Button","variant","onClick","value","EmptyRow","colSpan","jsxElement","App","props","getEmployees","setTimeout","setState","employees","isEmployeeLoading","handleSearchEvent","evt","filterValue","target","filteredEmployees","trim","state","filter","includes","employeeFilter","onDeleteEmployee","this","className","Jumbotron","Container","Form","Group","Control","size","type","placeholder","onChange","Table","striped","bordered","hover","length","map","Spinner","animation","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"+TAaMA,EAAc,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,iBAC7B,OACI,+BACI,6BAAKD,EAASE,KACd,6BAAKF,EAASG,OACd,6BAAKH,EAASI,OACd,6BACI,cAACC,EAAA,EAAD,CACIC,QAAQ,SACRC,QAASN,EACTO,MAAOR,EAASE,GAHpB,0BAYVO,EAAW,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WACzB,OACI,6BACI,oBAAID,QAASA,EAAb,SAAuBC,OAsHpBC,E,kDAhHX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAaVC,aAAe,WACjBC,YAAW,WACV,EAAKC,SAAS,CACbC,sBACAC,mBAAmB,MAElB,OApBkB,EAuBnBC,kBAAoB,SAACC,GACjB,IAAMC,EAAcD,EAAIE,OAAOd,MAC3Be,EAAoB,GAGpBA,EADAF,EAAYG,OACQ,EAAKC,MAAMR,UAAUS,QACrC,SAAC1B,GAAD,OACIA,EAASG,KAAKwB,SAASN,IACvBrB,EAASE,GAAGyB,SAASN,MAGTJ,YAGxB,EAAKD,SAAS,CACVY,eAAgBP,EAChBJ,UAAWM,KAvCA,EA2CnBM,iBAAmB,SAACT,GAChB,EAAKJ,SAAS,CACVC,UAAW,EAAKQ,MAAMR,UAAUS,QAC5B,SAAC1B,GAAD,OAAcA,EAASE,KAAOkB,EAAIE,OAAOd,YA3CjD,EAAKiB,MAAQ,CACTG,eAAgB,GAChBX,UAAW,GACXC,mBAAmB,GANR,E,qDAUtB,WACCY,KAAKhB,iB,oBAwCH,WAAU,IAAD,OACL,OACI,qBAAKiB,UAAU,MAAf,SACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,2CAEA,cAACC,EAAA,EAAKC,MAAN,UACI,cAACD,EAAA,EAAKE,QAAN,CACIC,KAAK,KACLC,KAAK,OACLC,YAAY,uBACZ/B,MAAOsB,KAAKL,MAAMG,eAClBY,SAAUV,KAAKX,sBAGvB,eAACsB,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACI,gCACI,+BACI,mCACA,sCACA,sCACA,8CAGR,gCACKd,KAAKL,MAAMR,UAAU4B,OAClBf,KAAKL,MAAMR,UAAU6B,KAAI,SAAC9C,GACtB,OACI,cAAC,EAAD,CACIA,SAAUA,EACVC,iBACI,EAAK4B,kBAEJ7B,EAASE,OAK1B,cAAC,EAAD,CACIQ,QAAS,EACTC,WACImB,KAAKL,MAAMP,kBACP,cAAC6B,EAAA,EAAD,CAASC,UAAU,WAEnB,6E,GAjG9BC,aC5BHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,gBClBAc,EAAOC,QAAU,CACbhD,UAAW,CACP,CACIf,GAAI,SACJC,KAAM,eACNC,KAAM,0BAEV,CACIF,GAAI,SACJC,KAAM,eACNC,KAAM,0BAEV,CACIF,GAAI,SACJC,KAAM,SACNC,KAAM,mBAEV,CACIF,GAAI,SACJC,KAAM,QACNC,KAAM,sB","file":"static/js/main.546a561f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { employees } from \"./data/employees\";\nimport {\n    Jumbotron,\n    Container,\n    Form,\n    Table,\n    Button,\n    Spinner,\n} from \"react-bootstrap\";\n\nimport \"./App.css\";\n\nconst EmployeeRow = ({ employee, onEmployeeDelete }) => {\n    return (\n        <tr>\n            <td>{employee.id}</td>\n            <td>{employee.name}</td>\n            <td>{employee.role}</td>\n            <td>\n                <Button\n                    variant=\"danger\"\n                    onClick={onEmployeeDelete}\n                    value={employee.id}\n                >\n                    Delete\n                </Button>\n            </td>\n        </tr>\n    );\n};\n\nconst EmptyRow = ({ colSpan, jsxElement }) => {\n    return (\n        <tr>\n            <td colSpan={colSpan}>{jsxElement}</td>\n        </tr>\n    );\n};\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            employeeFilter: \"\",\n            employees: [],\n            isEmployeeLoading: true,\n        };\n    }\n\n\tcomponentDidMount() {\n\t\tthis.getEmployees();\n\t}\n\n    getEmployees = () => {\t\n\t\tsetTimeout(() => {\n\t\t\tthis.setState({\n\t\t\t\temployees,\n\t\t\t\tisEmployeeLoading: false,\n\t\t\t});\n\t\t}, 1500);\n    };\n\n    handleSearchEvent = (evt) => {\n        const filterValue = evt.target.value;\n        let filteredEmployees = [];\n\n        if (filterValue.trim()) {\n            filteredEmployees = this.state.employees.filter(\n                (employee) =>\n                    employee.name.includes(filterValue) ||\n                    employee.id.includes(filterValue)\n            );\n        } else {\n            filteredEmployees = employees; // Reset with default values\n        }\n\n        this.setState({\n            employeeFilter: filterValue,\n            employees: filteredEmployees,\n        });\n    };\n\n    onDeleteEmployee = (evt) => {\n        this.setState({\n            employees: this.state.employees.filter(\n                (employee) => employee.id !== evt.target.value\n            ),\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Jumbotron>\n                    <Container>\n                        <h1>Employees</h1>\n\n                        <Form.Group>\n                            <Form.Control\n                                size=\"lg\"\n                                type=\"text\"\n                                placeholder=\"Search by name or id\"\n                                value={this.state.employeeFilter}\n                                onChange={this.handleSearchEvent}\n                            />\n                        </Form.Group>\n                        <Table striped bordered hover>\n                            <thead>\n                                <tr>\n                                    <th>#</th>\n                                    <th>Name</th>\n                                    <th>Role</th>\n                                    <th>Options</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {this.state.employees.length ? (\n                                    this.state.employees.map((employee) => {\n                                        return (\n                                            <EmployeeRow\n                                                employee={employee}\n                                                onEmployeeDelete={\n                                                    this.onDeleteEmployee\n                                                }\n                                                key={employee.id}\n                                            />\n                                        );\n                                    })\n                                ) : (\n                                    <EmptyRow\n                                        colSpan={4}\n                                        jsxElement={\n                                            this.state.isEmployeeLoading ? (\n                                                <Spinner animation=\"border\" />\n                                            ) : (\n                                                <span>\n                                                    No matching employees !\n                                                </span>\n                                            )\n                                        }\n                                    />\n                                )}\n                            </tbody>\n                        </Table>\n                    </Container>\n                </Jumbotron>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = {\r\n    employees: [\r\n        {\r\n            id: \"LS1229\",\r\n            name: \"ajayachathru\",\r\n            role: \"Senior systems analyst\",\r\n        },\r\n        {\r\n            id: \"LS1220\",\r\n            name: \"Krishnakumar\",\r\n            role: \"Senior systems analyst\",\r\n        },\r\n        {\r\n            id: \"LS1210\",\r\n            name: \"Suresh\",\r\n            role: \"systems analyst\",\r\n        },\r\n        {\r\n            id: \"LS1211\",\r\n            name: \"Shyam\",\r\n            role: \"Technical Lead\",\r\n        },\r\n    ],\r\n};\r\n"],"sourceRoot":""}